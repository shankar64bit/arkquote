import '../../../../domain/entities/equipment/AT/AT.dart';

class ATModel extends AT {
  const ATModel({
    final int id,
    final int databaseID,
    final String etype,
    final int trNo,
    final String designation,
    final String location,
    final String serialNo,
    final int rating,
    final int ratedVoltage_HV,
    final int ratedVoltage_LV,
    final double ratedCurrent_HV,
    final double ratedCurrent_LV,
    final String vectorGroup,
    final double impedanceVoltage,
    final int frequency,
    final String typeOfCooling,
    final int noOfPhases,
    final int noOfTaps,
    final int onOfNominalTaps,
    final int yom,
    final String make,
    final DateTime dateOfTesting,
    final DateTime updateDate,
    final String testedBy,
    final String verifiedBy,
    final String WitnessedBy,
  }) : super(
          id: id,
          databaseID: databaseID,
          etype: etype,
          trNo: trNo,
          designation: designation,
          location: location,
          serialNo: serialNo,
          rating: rating,
          ratedVoltage_HV: ratedVoltage_HV,
          ratedVoltage_LV: ratedVoltage_LV,
          ratedCurrent_HV: ratedCurrent_HV,
          ratedCurrent_LV: ratedCurrent_LV,
          vectorGroup: vectorGroup,
          impedanceVoltage: impedanceVoltage,
          frequency: frequency,
          typeOfCooling: typeOfCooling,
          noOfPhases: noOfPhases,
          noOfTaps: noOfTaps,
          onOfNominalTaps: onOfNominalTaps,
          yom: yom,
          make: make,
          dateOfTesting: dateOfTesting,
          updateDate: updateDate,
          testedBy: testedBy,
          verifiedBy: verifiedBy,
          WitnessedBy: WitnessedBy,
        );

  @override
  List<Object> get props => [
        id,
        databaseID,
        etype,
        trNo,
        designation,
        location,
        serialNo,
        rating,
        ratedVoltage_HV,
        ratedVoltage_LV,
        ratedCurrent_HV,
        ratedCurrent_LV,
        vectorGroup,
        impedanceVoltage,
        frequency,
        typeOfCooling,
        noOfPhases,
        noOfTaps,
        onOfNominalTaps,
        yom,
        make,
        dateOfTesting,
        updateDate,
        testedBy,
        verifiedBy,
        WitnessedBy,
      ];

  @override
  bool get stringify => true;

  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'databaseID': databaseID,
      'etype': etype,
      'trNo': trNo,
      'designation': designation,
      'location': location,
      'serialNo': serialNo,
      'rating': rating,
      'ratedVoltage_HV': ratedVoltage_HV,
      'ratedVoltage_LV': ratedVoltage_LV,
      'ratedCurrent_HV': ratedCurrent_HV,
      'ratedCurrent_LV': ratedCurrent_LV,
      'vectorGroup': vectorGroup,
      'impedanceVoltage': impedanceVoltage,
      'frequency': frequency,
      'typeOfCooling': typeOfCooling,
      'noOfPhases': noOfPhases,
      'noOfTaps': noOfTaps,
      'onOfNominalTaps': onOfNominalTaps,
      'yom': yom,
      'make': make,
      'dateOfTesting': dateOfTesting,
      'updateDate': updateDate,
      'testedBy': testedBy,
      'verifiedBy': verifiedBy,
      'WitnessedBy': WitnessedBy,
    };
  }

  factory ATModel.fromJson(Map<String, dynamic> json) {
    return ATModel(
      id: json['id'],
      databaseID: json['databaseID'],
      etype: json['etype'],
      trNo: json['trNo'],
      designation: json['designation'],
      location: json['location'],
      serialNo: json['serialNo'],
      rating: json['rating'],
      ratedVoltage_HV: json['ratedVoltage_HV'],
      ratedVoltage_LV: json['ratedVoltage_LV'],
      ratedCurrent_HV: json['ratedCurrent_HV'],
      ratedCurrent_LV: json['ratedCurrent_LV'],
      vectorGroup: json['vectorGroup'],
      impedanceVoltage: json['impedanceVoltage'],
      frequency: json['frequency'],
      typeOfCooling: json['typeOfCooling'],
      noOfPhases: json['noOfPhases'],
      noOfTaps: json['noOfTaps'],
      onOfNominalTaps: json['onOfNominalTaps'],
      yom: json['yom'],
      make: json['make'],
      dateOfTesting: json['dateOfTesting'],
      updateDate: json['updateDate'],
      testedBy: json['testedBy'],
      verifiedBy: json['verifiedBy'],
      WitnessedBy: json['WitnessedBy'],
    );
  }
}
