import 'package:flutter_testreports/features/testreport/domain/entities/equipment/acb/vcb_timing.dart';

class VcbTimingTestModel extends VcbTiming {
  const VcbTimingTestModel({
    final int id,
    final int databaseID,
    final String serialNo,
    final int trNo,
    final String EquipmentType,
    final DateTime lastUpdated,
    final double closeR,
    final double closeY,
    final double closeB,
    final double tc1OpenR,
    final double tc1OpenY,
    final double tc1OpenB,
    final double tc1CloseR,
    final double tc1CloseY,
    final double tc1CloseB,
    final double tc2OpenR,
    final double tc2OpenY,
    final double tc2OpenB,
    final double tc2CloseR,
    final double tc2CloseY,
    final double tc2CloseB,
  }) : super(
          id: id,
          databaseID: databaseID,
          trNo: trNo,
          serialNo: serialNo,
          closeR: closeR,
          closeY: closeY,
          closeB: closeB,
          tc1OpenR: tc1OpenR,
          tc1OpenY: tc1OpenY,
          tc1OpenB: tc1OpenB,
          tc1CloseR: tc1CloseR,
          tc1CloseY: tc1CloseY,
          tc1CloseB: tc1CloseB,
          tc2OpenR: tc2OpenR,
          tc2OpenY: tc2OpenY,
          tc2OpenB: tc2OpenB,
          tc2CloseR: tc2CloseR,
          tc2CloseY: tc2CloseY,
          tc2CloseB: tc2CloseB,
          EquipmentType: EquipmentType,
          lastUpdated: lastUpdated,
        );
  @override
  List<Object> get props => [
        id,
        databaseID,
        trNo,
        serialNo,
        closeR,
        closeY,
        closeB,
        tc1OpenR,
        tc1OpenY,
        tc1OpenB,
        tc1CloseR,
        tc1CloseY,
        tc1CloseB,
        tc2OpenR,
        tc2OpenY,
        tc2OpenB,
        tc2CloseR,
        tc2CloseY,
        tc2CloseB,
        EquipmentType,
        lastUpdated,
      ];

  @override
  bool get stringify => true;

  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'databaseID': databaseID,
      'trNo': trNo,
      'serialNo': serialNo,
      'closeR': closeR,
      'closeY': closeY,
      'closeB': closeB,
      'tc1OpenR': tc1OpenR,
      'tc1OpenY': tc1OpenY,
      'tc1OpenB': tc1OpenB,
      'tc1CloseR': tc1CloseR,
      'tc1CloseY': tc1CloseY,
      'tc1CloseB': tc1CloseB,
      'tc2OpenR': tc2OpenR,
      'tc2OpenY': tc2OpenY,
      'tc2OpenB': tc2OpenB,
      'tc2CloseR': tc2CloseR,
      'tc2CloseY': tc2CloseY,
      'tc2CloseB': tc2CloseB,
      'equipmentUsed': EquipmentType,
      'updateDate': lastUpdated,
    };
  }

  factory VcbTimingTestModel.fromJson(Map<String, dynamic> json) {
    return VcbTimingTestModel(
      id: json['id'],
      databaseID: json['databaseID'],
      trNo: json['trNo'],
      serialNo: json['serialNo'],
      closeR: json['closeR'],
      closeY: json['closeY'],
      closeB: json['closeB'],
      tc1OpenR: json['tc1OpenR'],
      tc1OpenY: json['tc1OpenY'],
      tc1OpenB: json['tc1OpenB'],
      tc1CloseR: json['tc1CloseR'],
      tc1CloseY: json['tc1CloseY'],
      tc1CloseB: json['tc1CloseB'],
      tc2OpenR: json['tc2OpenR'],
      tc2OpenY: json['tc2OpenY'],
      tc2OpenB: json['tc2OpenB'],
      tc2CloseR: json['tc2CloseR'],
      tc2CloseY: json['tc2CloseY'],
      tc2CloseB: json['tc2CloseB'],
      EquipmentType: json['equipmentUsed'],
      lastUpdated: json['updateDate'],
    );
  }
}
